/*
Parameters

In some cases, you can destructure the object in a function argument itself.

Consider the code below:

    const profileUpdate = (profileData) => {
      const { name, age, nationality, location } = profileData;
      // do something with these variables
    }

This effectively destructures the object sent into the function. This can also be done in-place:

    const profileUpdate = ({ name, age, nationality, location }) => {
      /* do something with these fields */
    }

This removes some extra lines and makes our code look neat.

This has the added benefit of not having to manipulate an entire object in a function; only the fields that are needed are copied inside the function.
*/

//Create an array of stats
const stats = {
  max: 56.78,
  standard_deviation: 4.34,
  median: 34.54,
  mode: 23.87,
  min: -0.75,
  average: 35.85
};

//Create a function call half that returns a function half(arg1, arg2) that accepts to args 
const half = (function() {
  "use strict";

  return function half({min, max}) {
    return (max + min) / 2.0;
  };
})();
console.log(stats); // should be object

//Pass the stats array through the half function which is auto set up to average out the min and max props
console.log(half(stats)); // should be 28.015
